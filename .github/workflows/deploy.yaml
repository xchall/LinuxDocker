name: Build, Test and Deploy

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      http_proxy: ""
      https_proxy: ""
      no_proxy: "*"


    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_DB: kubsu
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Build and test
      run: |
        podman build -t app-builder -f Dockerfile --target builder .

  deploy:
    needs: test
    runs-on: self-hosted
    env:
      http_proxy: ""
      https_proxy: ""
      no_proxy: "*"
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/pythod-crud:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            unset http_proxy https_proxy
            podman login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
            podman stop pythod-crud || true
            podman rm pythod-crud || true
            podman rmi ${{ vars.DOCKERHUB_USERNAME }}/pythod-crud:latest || true
            podman pull ${{ vars.DOCKERHUB_USERNAME }}/pythod-crud:latest
            podman run -d --name pythod-crud --network host ${{ vars.DOCKERHUB_USERNAME }}/pythod-crud:latest
