name: Deploy

on:
  push:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: kubsu
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.dev
          tags: ${{ vars.DOCKERHUB_USERNAME }}/python-crud-dev:latest
          load: true

      - name: Run tests
        run: |
          docker run --rm --network=host ${{ vars.DOCKERHUB_USERNAME }}/python-crud-dev:latest

  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - name: Verify variables
        run: |
          echo "DockerHub User: ${{ vars.DOCKERHUB_USERNAME }}"
          [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ] && echo "ERROR: Docker token not set!" && exit 1
          [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ] && echo "ERROR: SSH key not set!" && exit 1

      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/python-crud:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_timeout: 10m
          script: |
            set -e
            echo "=== Starting deployment ==="
            podman login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN} docker.io
            podman stop python-crud || true
            podman rm python-crud || true
            podman rmi ${DOCKERHUB_USERNAME}/python-crud:latest || true
            podman pull ${DOCKERHUB_USERNAME}/python-crud:latest
            podman run -d --name python-crud --network host ${DOCKERHUB_USERNAME}/python-crud:latest
            echo "Container deployed successfully!"
